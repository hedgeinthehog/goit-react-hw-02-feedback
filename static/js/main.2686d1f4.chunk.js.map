{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/App/App.jsx","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","className","styles","btn","onClick","Statistics","good","neutral","bad","total","positivePercentage","statItem","Section","title","children","section","App","state","handleFeedbackBtnClick","event","innerText","target","setState","prevState","countTotalFeedbacks","Object","values","reduce","countPositiveFeedbackPercentage","positiveFeedbacks","totalFeedbacks","positiveFeedbackPercentage","Math","round","this","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oPAuBeA,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLC,UAAWC,IAAOC,IAElBC,QAASP,EAJX,SAMGE,GAHIA,S,gBCgBEM,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGT,UAAWC,IAAOS,SAArB,mBAAsCL,KACtC,oBAAGL,UAAWC,IAAOS,SAArB,sBAAyCJ,KACzC,oBAAGN,UAAWC,IAAOS,SAArB,kBAAqCH,KACrC,oBAAGP,UAAWC,IAAOS,SAArB,oBAAuCF,KACvC,oBAAGR,UAAWC,IAAOS,SAArB,gCACsBD,EADtB,W,gBCISE,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASb,UAAWC,IAAOa,QAA3B,UACE,oBAAId,UAAWC,IAAOW,MAAtB,SAA8BA,IAC7BC,MC+DUE,E,4MA/DbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,uBAAyB,SAAAC,GACvB,IAAQC,EAAcD,EAAME,OAApBD,UAER,EAAKE,UAAS,SAAAC,GAAS,sBACpBH,EAAYG,EAAUH,GAAa,O,EAIxCI,oBAAsB,SAAA5B,GAKpB,OAJuB6B,OAAOC,OAAO9B,GAAS+B,QAC5C,SAAClB,EAAOV,GAAR,OAAmBU,EAAQV,M,EAM/B6B,gCAAkC,SAAAhC,GAChC,IAAMiC,EAAoBjC,EAAQU,KAC5BwB,EAAiB,EAAKN,oBAAoB5B,GAE1CmC,EAA6BD,EAC9BD,EAAoBC,EAAkB,IACvC,EAEJ,OAAOE,KAAKC,MAAMF,I,4CAGpB,WACE,MAA+BG,KAAKjB,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASK,MAAM,uBAAf,SACE,cAAC,EAAD,CACEjB,QAAS6B,OAAOU,KAAKD,KAAKjB,OAC1BpB,gBAAiBqC,KAAKhB,2BAG1B,cAAC,EAAD,CAASL,MAAM,aAAf,SACGqB,KAAKV,oBAAoBU,KAAKjB,OAC7B,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,KAAKV,oBAAoBU,KAAKjB,OACrCP,mBAAoBwB,KAAKN,gCACvBM,KAAKjB,SAIT,8B,GAxDMmB,IAAMC,W,MCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,+B,kBCA7BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.2686d1f4.chunk.js","sourcesContent":["import styles from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {options.map(option => (\r\n      <button\r\n        type=\"button\"\r\n        className={styles.btn}\r\n        key={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.statItem}>Good: {good}</p>\r\n      <p className={styles.statItem}>Neutral: {neutral}</p>\r\n      <p className={styles.statItem}>Bad: {bad}</p>\r\n      <p className={styles.statItem}>Total: {total}</p>\r\n      <p className={styles.statItem}>\r\n        Positive feedback: {positivePercentage}%\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import styles from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\nimport Section from '../Section';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleFeedbackBtnClick = event => {\r\n    const { innerText } = event.target;\r\n\r\n    this.setState(prevState => ({\r\n      [innerText]: prevState[innerText] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedbacks = options => {\r\n    const totalFeedbacks = Object.values(options).reduce(\r\n      (total, option) => total + option,\r\n    );\r\n\r\n    return totalFeedbacks;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = options => {\r\n    const positiveFeedbacks = options.good;\r\n    const totalFeedbacks = this.countTotalFeedbacks(options);\r\n\r\n    const positiveFeedbackPercentage = totalFeedbacks\r\n      ? (positiveFeedbacks / totalFeedbacks) * 100\r\n      : 0;\r\n\r\n    return Math.round(positiveFeedbackPercentage);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"please leave fedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleFeedbackBtnClick}\r\n          />\r\n        </Section>\r\n        <Section title=\"statistics\">\r\n          {this.countTotalFeedbacks(this.state) ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedbacks(this.state)}\r\n              positivePercentage={this.countPositiveFeedbackPercentage(\r\n                this.state,\r\n              )}\r\n            />\r\n          ) : (\r\n            'No feedbacks given'\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statItem\":\"Statistics_statItem__3UbRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3RwRf\",\"title\":\"Section_title__1sOEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1bLOc\"};"],"sourceRoot":""}